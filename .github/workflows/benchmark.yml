name: Benchmark
on: 
  pull_request:
    types: [labeled]
  schedule:
    - cron: '30 20 * * *'

# Add tokens in repository settings
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DD_API_KEY: ${{ secrets.DD_API_KEY }}

jobs:
  benchmark:
    runs-on: graphql # Setup own runner machine
    strategy:
      matrix:
        node-version: [14.17.1]
    if: ${{ (github.event.label.name == 'benchmark') || (github.event_name == 'schedule') }}
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: ExampleQuery
        id: example-query
        run: |
          yarn benchmark ExampleQuery 
          echo "::set-output name=avgReq::$(grep -o -E 'Requests/sec:[[:space:].0-9]+' output.txt | grep -o -E '[0-9.]+')"
          echo "::set-output name=p50latency::$(grep -o -E '50%[[:space:].0-9]+' output.txt | grep -o -E '[0-9.]+' | sed -n 2p)"
          echo "::set-output name=p99latency::$(grep -o -E '99%[[:space:].0-9]+' output.txt | grep -o -E '[0-9.]+' | sed -n 2p)"
          echo "::set-output name=sdLat::$(sed -n 4p output.txt | grep -o -E '[0-9a-z.]+' | sed -n 3p)"

      - name: Add PR comment
        uses: peter-evans/commit-comment@v1
        with:
          sha: ${{github.event.pull_request.head.sha}}
          body: |
            **Performance Benchmarks**
            Connections: 40
            
            | For | RPS | p50 latency | p99 latency | SD (latency) |
            | --- | --- | --- | --- | --- |
            | `ExampleQuery` | ${{ steps.example-query.outputs.avgReq }} | ${{ steps.example-query.outputs.p50latency }} ms | ${{ steps.example-query.outputs.p99latency }} ms | ${{ steps.example-query.outputs.sdLat }} |

      # Send data to DD
      - name: Set timestamp
        id: timestamp
        run: echo "::set-output name=time::$(date +%s)"
          
      - name: Post data to DD
        run: |
          {"series": [{"host": "gql.localhost","metric": "ExampleQuery.RPS", "points": [[${{ steps.timestamp.outputs.time }}, ${{ steps.example-query.outputs.avgReq }}]]}]}'